extend type Query {

	"List out all public projects"
	projects(
		mode: ProjectListMode!,
		skip: Int,
		take: Int
	): [Project!]!

	"Perform a search query"
    search(query: String!): SearchResult!
}

extend type Mutation {

	"Create a new project with given details"
	createProject(details: ProjectCreationInput!): Project!
	
}

"""
Creation details used to instance a new project
"""
input ProjectCreationInput {
	name: String!
	public: Boolean!
	description: String
}

"""
Projects are the container in which tasks
are created, managed, and modified. Projects
are always owned by a specific user, while other
users and teams can be invited to it.
"""
type Project {
	id: Int!
	slug: String!
	name: String!
	createdAt: String!
	lastModifiedAt: String!
	projectUrl: String!
	description: String
	coverImage: String
	backgroundImage: String
	isClosed: Boolean!
	isStarred: Boolean!
	creator: Profile!
	tasks: [Task!]!
	members: [ProjectMember!]!
	teams: [ProjectTeam!]!
}

"""
Tasks are the most important concept in Vindigo and
represent a single task witin a project.
"""
type Task {
	id: Int!
	summary: String!
	description: String
	createdAt: String!
	lastModifiedAt: String!
	assignees: [Profile!]!
	comments(skip: Int, take: Int): [Comment!]!
	commentAmount: Int!
	isWatching: Boolean!
	parentTask: Task
	childTasks: [Task!]!
	childAmount: Int!
	changeHistory: [String!]!
	changeHistoryAmount: Int!
}

"""
A comment left on a Task
"""
type Comment {
	id: Int!
	author: Profile!
	content: String!
	createdAt: String!
}

"""
A single user that is participating on a project
"""
type ProjectMember {
	member: Profile!
	accessLevel: String!
}

"""
A single team that is participating on a project
"""
type ProjectTeam {
	team: Team
	accessLevel: String!
}

"""

"""
type SearchResult {
	projects: [Project!]!
	users: [Profile!]!
	teams: [Team!]!
}

enum ProjectListMode {

	"Projects owned by the user"
	PERSONAL,

	"Any project starred by the user"
	STARRED,

	"Projects marked as public"
	PUBLIC

}